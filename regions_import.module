<?php

/**
 * @file
 * Regions Import module file.
 */

use Drupal\migrate\Plugin\MigrationInterface;
use Drupal\regions_import\MigrateMessageLog;
use Drupal\migrate_tools\MigrateExecutable;

/**
 * Implements hook_cron().
 *
 * It must run at 2AM.
 */
function regions_import_cron() {
  // Pantheon's cron run every hour (see https://pantheon.io/docs/drupal-cron/),
  // we want to run the migrations at 2AM, so we just need to check the hour.
  $import_time = 2;
  $request_time = \Drupal::time()->getRequestTime();
  if (date('G', $request_time) != $import_time) {
    return;
  }

  // @todo Add more migrations here.
  $migration_names = [
    'regions_tree',
  ];

  $migrations = drush_migrate_tools_migration_list(implode(',', $migration_names));
  // Additional options.
  $options = ['update' => TRUE];

  foreach ($migrations as $group_id => $migration_list) {
    array_walk($migration_list, '_regions_import_tools_execute_migration', $options);
  }
}

/**
 * Executes a single migration.
 *
 * Heavily based on the Drush method.
 *
 * @param \Drupal\migrate\Plugin\MigrationInterface $migration
 *   The migration to execute.
 * @param string $migration_id
 *   The migration ID (not used, just an artifact of array_walk()).
 * @param array $options
 *   Additional options for the migration.
 *
 * @see _drush_migrate_tools_execute_migration
 */
function _regions_import_tools_execute_migration(MigrationInterface $migration, $migration_id, array $options = []) {
  $log = new MigrateMessageLog();

  // Always execute the requirements.
  if ($required_IDS = $migration->get('requirements')) {
    $manager = \Drupal::service('plugin.manager.config_entity_migration');
    $required_migrations = $manager->createInstances($required_IDS);
    $dependency_options = array_merge($options, ['is_dependency' => TRUE]);
    array_walk($required_migrations, __FUNCTION__, $dependency_options);
  }

  if (!empty($options['update'])) {
    $migration->getIdMap()->prepareUpdate();
  }
  $executable = new MigrateExecutable($migration, $log, $options);
  $executable->import();
}
